infix group Additive {
  associativity = start;
  precedence < Multiplicative;
}
infix group Multiplicative {
  associativity = start;
}
infix group Relational {
  associativity = none;
  precedence < Additive;
}

infix (+): Additive;
infix (-): Additive;
infix (*): Multiplicative;
infix (<=): Relational;
infix (==): Relational;

func (+)(x: Int32, y: Int32) -> Int32 {
  __builtin(add)(x, y)
}
func (-)(x: Int32, y: Int32) -> Int32 {
  __builtin(sub)(x, y)
}
func (*)(x: Int32, y: Int32) -> Int32 {
  __builtin(mul)(x, y)
}

func (<=)(x: Int32, y: Int32) -> Bool {
  __builtin(less_eq)(x, y)
}
func (==)(x: Int32, y: Int32) -> Bool {
  if (x <= y) {
    y <= x
  } else {
    false
  }
}

func main() -> Int32 {
  if (1 * 3 - 1 == 2) {
    if (2 == 1 * 3 - 1) {
      1 + 2 * 3
    } else {
      1
    }
  } else {
    0
  }
}
